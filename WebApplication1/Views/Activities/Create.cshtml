@model WebApplication1.Models.Activities.Activity
@using WebApplication1.HtmlHelpers

@{
    ViewBag.Title = "Criar";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="panel">
        <div class="panel-heading" id="activityPanelHeading">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        @Html.LabelFor(model => model.RequestDate, htmlAttributes: new { @class = "control-label" })
                        @Html.DatePickerFor(model => model.RequestDate, new { @class = "form-control" })
                        @*@Html.ValidationMessageFor(model => model.RequestDate, "", new { @class = "text-danger" })*@
                    </div>

                    <div class="col-md-2">
                        @Html.LabelFor(model => model.FinalDate, htmlAttributes: new { @class = "control-label" })
                        @Html.DatePickerFor(model => model.FinalDate, new { @class = "form-control", @disabled = "" })
                        @*@Html.ValidationMessageFor(model => model.FinalDate, "", new { @class = "text-danger" })*@
                    </div>

                    <div class="col-md-2">
                        @Html.LabelFor(model => model.RequestMeansId, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            @Html.DropDownList("RequestMeansId", null, htmlAttributes: new { @class = "form-control" })
                            <div class="input-group-btn">
                                @Html.ActionLink("+", "Create", "RequestMeans", new { isModal = true }, new { @class = "modal-link btn btn-success", elemento_update = "#RequestMeansId" })
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.RequestMeansId, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        @Html.LabelFor(model => model.CalledNumber, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CalledNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CalledNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "control-label" })

                        <div class="input-group">
                            @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control" })
                            <div class="input-group-btn">
                                @Html.ActionLink("+", "Create", "Companies", new { isModal = true }, new { @class = "modal-link btn btn-success", elemento_update = "#CompanyId" })
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-4">
                        @Html.LabelFor(model => model.RequesterId, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            @Html.DropDownList("RequesterId", null, htmlAttributes: new { @class = "form-control" })
                            <div class="input-group-btn">
                                @Html.ActionLink("+", "Create", "Requesters", new { isModal = true }, new { @class = "modal-link btn btn-success", elemento_update = "#RequesterId" })
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.RequesterId, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        @Html.LabelFor(model => model.StatusId, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        @Html.LabelFor(model => model.ApplicationUserId, htmlAttributes: new { @class = "control-label" })
                        @Html.HiddenFor(c => c.ApplicationUserId)
                        @Html.EditorFor(model => model.ApplicationUser.Name, new { htmlAttributes = new { @class = "form-control", @disabled = "" } })
                    </div>
                </div>
            </div>
        </div>
        @if (Model.Id == 0)
        {
            <div class="panel-body" id="activityPanelBody">

                <div class="row">
                    <div class="text-center">
                        <h2 class="text-danger">Evidência</h2>
                        <hr />
                    </div>
                    @{
                        Html.RenderAction("Create", "Evidences");
                    }
                </div>

            </div>
                        }
                        else
                        {
                            <div class="panel-body" id="activityPanelBody">
                                <div>
                                    @if (Model.FinalDate == null)
                                    {
                                        <div class="navbar" id="menuPanelBody">
                                            <div class="navbar-header">
                                                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                                                    <span class="icon-bar"></span>
                                                    <span class="icon-bar"></span>
                                                    <span class="icon-bar"></span>
                                                </button>
                                                @Html.ActionLink("Nova Evidência", "Create", "Evidences", new { area = "", activityId = Model.Id, requesterId = Model.RequesterId }, new { @class = "navbar-brand" })
                                            </div>
                                            <div class="navbar-collapse collapse">
                                                <ul class="nav navbar-nav">
                                                    <li>@Html.ActionLink("Contato", "Create", "Contact")</li>
                                                    <li>@Html.ActionLink("E-mail", "Create", "EmailBoxes")</li>
                                                    <li>@Html.ActionLink("Fechar", "Closed", "Activities", new { id = Model.Id })</li>
                                                </ul>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <h3 class="text-danger">Atividade Fechada</h3>
                                    }
                                </div>
                                @{
                                    Html.RenderAction("Index", "Evidences", new { activityId = Model.Id });
                                }
                                <div>
                                    @Html.ActionLink("Voltar para lista", "Index")
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Salvar" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                                    }

    </div>
                                    }


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
